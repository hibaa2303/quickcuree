{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Medicines.css'; // Assuming you're creating a separate CSS file for styles\n\nconst Medicines = () => {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10); // Show 10 items per page\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentMedicines = medicines.slice(indexOfFirstItem, indexOfLastItem);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/medicines?page=${currentPage}&limit=${itemsPerPage}`);\n        setMedicines(response.data.data); // Assuming the data is in response.data.data\n      } catch (error) {\n        console.error('Error fetching medicines:', error);\n      }\n    };\n    fetchData();\n  }, []);\n};\n_s(Medicines, \"io9yhwSlPiPvTZX8BfAs+9HVUyw=\");\n_c = Medicines;\nexport default Medicines;\nvar _c;\n$RefreshReg$(_c, \"Medicines\");","map":{"version":3,"names":["React","useEffect","useState","axios","Medicines","_s","medicines","setMedicines","currentPage","setCurrentPage","itemsPerPage","indexOfLastItem","indexOfFirstItem","currentMedicines","slice","fetchData","response","get","data","error","console","_c","$RefreshReg$"],"sources":["/Users/shaikshamirnawaz/Medicine/quickcure/src/Medicines.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Medicines.css'; // Assuming you're creating a separate CSS file for styles\n\nconst Medicines = () => {\n  const [medicines, setMedicines] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\nconst [itemsPerPage] = useState(10); // Show 10 items per page\nconst indexOfLastItem = currentPage * itemsPerPage;\nconst indexOfFirstItem = indexOfLastItem - itemsPerPage;\nconst currentMedicines = medicines.slice(indexOfFirstItem, indexOfLastItem);\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/medicines?page=${currentPage}&limit=${itemsPerPage}`);\n\n        setMedicines(response.data.data); // Assuming the data is in response.data.data\n      } catch (error) {\n        console.error('Error fetching medicines:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  \n};\n\nexport default Medicines;\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB,CAAC,CAAC;;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACQ,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACrC,MAAMS,eAAe,GAAGH,WAAW,GAAGE,YAAY;EAClD,MAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAAY;EACvD,MAAMG,gBAAgB,GAAGP,SAAS,CAACQ,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EAGzEV,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wCAAwCT,WAAW,UAAUE,YAAY,EAAE,CAAC;QAE7GH,YAAY,CAACS,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;AAGR,CAAC;AAACV,EAAA,CAxBID,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}