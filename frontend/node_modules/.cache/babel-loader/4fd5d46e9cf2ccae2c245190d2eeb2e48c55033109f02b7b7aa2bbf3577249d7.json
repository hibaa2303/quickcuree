{"ast":null,"code":"var _jsxFileName = \"/Users/shaikshamirnawaz/Medicine/quickcure/src/LocationUpdater.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Location.css';\n// Component for updating location\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationUpdater = () => {\n  _s();\n  const [location, setLocation] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [isLocationFetched, setIsLocationFetched] = useState(false);\n\n  // Open Modal\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  // Close Modal\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  // Handle location input manually\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n\n  // Fetch user's location with Geolocation API\n  const fetchLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setLocation(`Lat: ${latitude}, Long: ${longitude}`);\n        setIsLocationFetched(true);\n      }, error => {\n        console.error('Error fetching location:', error);\n        alert('Unable to fetch location.');\n      });\n    } else {\n      alert('Geolocation is not supported by your browser.');\n    }\n  };\n\n  // Submit or update location (optional: send to backend)\n  const submitLocation = () => {\n    console.log('Submitted Location:', location);\n    // Here you can send the location to the backend if needed\n    closeModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Update your location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update Your Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), isLocationFetched ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your location is: \", location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your location\",\n          value: location,\n          onChange: handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchLocation,\n            children: \"Fetch Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitLocation,\n            children: \"Confirm Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationUpdater, \"YGW3mybTKv7B1LU77LpAE0F1qOk=\");\n_c = LocationUpdater;\nexport default LocationUpdater;\nvar _c;\n$RefreshReg$(_c, \"LocationUpdater\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LocationUpdater","_s","location","setLocation","showModal","setShowModal","isLocationFetched","setIsLocationFetched","openModal","closeModal","handleLocationChange","event","target","value","fetchLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","alert","submitLocation","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/shaikshamirnawaz/Medicine/quickcure/src/LocationUpdater.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Location.css';\n// Component for updating location\nconst LocationUpdater = () => {\n  const [location, setLocation] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [isLocationFetched, setIsLocationFetched] = useState(false);\n\n  // Open Modal\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  // Close Modal\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  // Handle location input manually\n  const handleLocationChange = (event) => {\n    setLocation(event.target.value);\n  };\n\n  // Fetch user's location with Geolocation API\n  const fetchLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setLocation(`Lat: ${latitude}, Long: ${longitude}`);\n          setIsLocationFetched(true);\n        },\n        (error) => {\n          console.error('Error fetching location:', error);\n          alert('Unable to fetch location.');\n        }\n      );\n    } else {\n      alert('Geolocation is not supported by your browser.');\n    }\n  };\n\n  // Submit or update location (optional: send to backend)\n  const submitLocation = () => {\n    console.log('Submitted Location:', location);\n    // Here you can send the location to the backend if needed\n    closeModal();\n  };\n\n  return (\n    <div>\n      {/* Trigger to open modal */}\n      <button onClick={openModal}>Update your location</button>\n\n      {/* Modal */}\n      {showModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>Update Your Location</h3>\n\n            {isLocationFetched ? (\n              <p>Your location is: {location}</p>\n            ) : (\n              <input\n                type=\"text\"\n                placeholder=\"Enter your location\"\n                value={location}\n                onChange={handleLocationChange}\n              />\n            )}\n\n            <div className=\"modal-buttons\">\n              <button onClick={fetchLocation}>Fetch Location</button>\n              <button onClick={submitLocation}>Confirm Location</button>\n              <button onClick={closeModal}>Close</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationUpdater;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}